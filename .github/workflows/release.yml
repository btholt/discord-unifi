name: Build and Release Docker Image

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 1.0.0)"
        required: true
        default: "1.0.0"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Generate release notes
        id: release-notes
        run: |
          echo "## 🚀 Unifi Discord Bridge v${{ github.ref_name }}" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "### 🐳 Docker Image" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "Pull the image:" >> RELEASE_NOTES.md
          echo '```bash' >> RELEASE_NOTES.md
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> RELEASE_NOTES.md
          echo '```' >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "### 🚀 Quick Start" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo '```bash' >> RELEASE_NOTES.md
          echo "# Run with environment variables" >> RELEASE_NOTES.md
          echo 'docker run -d \' >> RELEASE_NOTES.md
          echo '  --name unifi-discord-bridge \' >> RELEASE_NOTES.md
          echo '  -p 3000:3000 \' >> RELEASE_NOTES.md
          echo '  -e DISCORD_WEBHOOK_URL="your_discord_webhook_url" \' >> RELEASE_NOTES.md
          echo '  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest' >> RELEASE_NOTES.md
          echo '```' >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "### 📋 Environment Variables" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "- \`DISCORD_WEBHOOK_URL\` (required): Your Discord webhook URL" >> RELEASE_NOTES.md
          echo "- \`PORT\` (optional): Server port (default: 3000)" >> RELEASE_NOTES.md
          echo "- \`WEBHOOK_PATH\` (optional): Webhook endpoint path (default: /webhook/unifi)" >> RELEASE_NOTES.md
          echo "- \`LOG_LEVEL\` (optional): Logging level (default: info)" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "### 🔗 Documentation" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "For full documentation, see the [README.md](https://github.com/${{ github.repository }}/blob/main/README.md)" >> RELEASE_NOTES.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup
        run: rm -f RELEASE_NOTES.md
